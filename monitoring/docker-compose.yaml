version: '3.6'

services:
  influxdb:
    image: influxdb:1.8
    networks:
      - monitoring
    ports:
      - "8086:8086"
    environment:
      - INFLUXDB_DB=k6
  k6:
      image: loadimpact/k6:latest
      networks:
        - monitoring
      ports:
        - "6565:6565"
      environment:
        - K6_OUT=influxdb=http://influxdb:8086/k6
      volumes:
        - ./scripts:/scripts
      command:
        run /scripts/script.js
      depends_on:
        - influxdb

  jaeger:
    container_name: jaeger
    image: jaegertracing/all-in-one:1.37
    # environment:
      # - COLLECTOR_ZIPKIN_HOST_PORT=:9411
      # - COLLECTOR_OTLP_ENABLED=true
    ports:
    - 6831:6831/udp
    # - 6832:6832/udp
    # - 5778:5778
    - 16686:16686
    # - 4317:4317
    # - 4318:4318
    # - 14250:14250
    # - 14268:14268
    # - 14269:14269
    # - 9411:9411

  prometheus:
    container_name: prometheus
    hostname: prometheus
    image: prom/prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      # - ./alert_rules.yml:/etc/prometheus/alert_rules.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    # links:
    #   - cadvisor:cadvisor
    #   - alertmanager:alertmanager
    ports:
      - 9090:9090
    # depends_on:
    #   - cadvisor
    networks:
      - monitoring

  
  grafana:
    container_name: grafana
    hostname: grafana
    image: grafana/grafana
    volumes:
      - ./grafana_datasources.yml:/etc/grafana/provisioning/datasources/all.yaml
      - ./grafana_config.ini:/etc/grafana/config.ini
      - grafana_data:/var/lib/grafana
      - ./dashboards:/var/lib/grafana/dashboards
      - ./grafana-dashboard.yaml:/etc/grafana/provisioning/dashboards/dashboard.yaml
    ports:
      - 3000:3000
    depends_on:
      - prometheus
    networks:
      - monitoring

 # monitors the user service db
  userservice-mysql-exporter:
    container_name: userservice-mysql-exporter
    image: prom/mysqld-exporter:latest
    environment:
      - DATA_SOURCE_NAME=exporter:exporterpassword@(docker.for.mac.host.internal:3306)/userservicedb
      - web.listen-address=:9104
      - collect.info_schema.tablestats=true
      - collect.info_schema.userstats=true
      - collect.info_schema.query_response_time=true
      - collect.auto_increment.columns=true
      - collect.binlog_size=true
      - collect.perf_schema.eventsstatements=true
      - collect.perf_schema.eventswaits=true
      - collect.perf_schema.file_events=true
      - collect.perf_schema.indexiowaits=true
      - collect.perf_schema.tableiowaits=true
      - collect.perf_schema.tablelocks=true
    ports:
      - 9104:9104
    networks:
      - monitoring

  itemservice-mysql-exporter:
    container_name: itemservice-mysql-exporter
    image: prom/mysqld-exporter:latest
    environment:
      - DATA_SOURCE_NAME=exporter:exporterpassword@(docker.for.mac.host.internal:3306)/itemservicedb
      - web.listen-address=:9105
      - collect.info_schema.tablestats=true
      - collect.info_schema.userstats=true
      - collect.info_schema.query_response_time=true
      - collect.auto_increment.columns=true
      - collect.binlog_size=true
      - collect.perf_schema.eventsstatements=true
      - collect.perf_schema.eventswaits=true
      - collect.perf_schema.file_events=true
      - collect.perf_schema.indexiowaits=true
      - collect.perf_schema.tableiowaits=true
      - collect.perf_schema.tablelocks=true
    ports:
      - 9105:9104
    networks:
      - monitoring

networks:
  monitoring:

volumes:
  prometheus_data: {}
  grafana_data: {}
